
type Course {
	id: String!
	name: String!
	grade: Float
	teacher: String
	academicDepartment: String
}




type Module {
	id: String!
	name: String!
	ects: Int!
	grade: Float
	startSemester: String!
	endSemester: String!
}

type Mutation {
	createTodo(input: NewTodo!): Todo!
	createSemester(input: NewSemester!): Semester!
	createModule(input: NewModule!): Module!
}

"""
ISO 8601 calendar date without timezone.
Format: %Y-%m-%d

# Examples

* `1994-11-13`
* `2000-02-24`
"""
scalar NaiveDate

"""
ISO 8601 combined date and time without timezone.

# Examples

* `2015-07-01T08:59:60.123`,
"""
scalar NaiveDateTime

input NewModule {
	name: String!
	ects: Int!
	grade: Float
	startSemester: String!
	endSemester: String!
}

input NewSemester {
	semester: Int!
	startDate: NaiveDate!
	endDate: NaiveDate!
	totalEcts: Int!
}

input NewTodo {
	title: String!
	dueOn: NaiveDateTime!
	icon: String!
	courseId: String
	todoType: TodoType
}

type Query {
	todo(id: String!): Todo!
	todos: [Todo!]!
	todosByDate(date: NaiveDate!): [Todo!]!
	semester(semester: Int!): Semester!
	semesters: [Semester!]!
	module(id: String!): Module!
	modules: [Module!]!
}

type Semester {
	id: String!
	semester: Int!
	startDate: NaiveDate!
	endDate: NaiveDate!
	totalEcts: Int!
	modules: [Module!]!
	courses: [Course!]!
}


type Todo {
	id: String!
	title: String!
	dueOn: NaiveDateTime!
	userId: String!
	todoType: TodoType!
	status: TodoStatus!
	course: Course
}

enum TodoStatus {
	PENDING
	IN_PROGRESS
	COMPLETED
}

enum TodoType {
	ASSIGNMENT
	EXAM
	GENERAL
}

directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
schema {
	query: Query
	mutation: Mutation
}
