/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as AuthenticatedImport } from "./routes/_authenticated";
import { Route as AuthenticatedCalendarImport } from "./routes/_authenticated/calendar";
import { Route as AuthenticatedFlashcardsImport } from "./routes/_authenticated/flashcards";
import { Route as AuthenticatedIndexImport } from "./routes/_authenticated/index";
import { Route as AuthenticatedNotebooksImport } from "./routes/_authenticated/notebooks";
import { Route as AuthenticatedNotesImport } from "./routes/_authenticated/notes";
import { Route as AuthenticatedSemesterstepperImport } from "./routes/_authenticated/semester_stepper";
import { Route as AuthenticatedSwappyImport } from "./routes/_authenticated/swappy";
import { Route as AuthenticatedTestImport } from "./routes/_authenticated/test";
import { Route as AuthenticatedUniversityCoursesCoursesImport } from "./routes/_authenticated/university/courses/$courses";
import { Route as AuthenticatedUniversityCoursesIndexImport } from "./routes/_authenticated/university/courses/index";
import { Route as AuthenticatedUniversityIndexImport } from "./routes/_authenticated/university/index";
import { Route as AuthenticatedUniversityModulesImport } from "./routes/_authenticated/university/modules";
import { Route as AuthenticatedUniversitySemesterSemesterImport } from "./routes/_authenticated/university/semester/$semester";
import { Route as AuthenticatedUniversitySemesterIndexImport } from "./routes/_authenticated/university/semester/index";
import { Route as AuthenticatedUniversityTodosTodoImport } from "./routes/_authenticated/university/todos/$todo";
import { Route as AuthenticatedUniversityTodosIndexImport } from "./routes/_authenticated/university/todos/index";
import { Route as LoginImport } from "./routes/login";
import { Route as SignupImport } from "./routes/signup";

// Create/Update Routes

const SignupRoute = SignupImport.update({
	id: "/signup",
	path: "/signup",
	getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
	id: "/login",
	path: "/login",
	getParentRoute: () => rootRoute,
} as any);

const AuthenticatedRoute = AuthenticatedImport.update({
	id: "/_authenticated",
	getParentRoute: () => rootRoute,
} as any);

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedTestRoute = AuthenticatedTestImport.update({
	id: "/test",
	path: "/test",
	getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedSwappyRoute = AuthenticatedSwappyImport.update({
	id: "/swappy",
	path: "/swappy",
	getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedSemesterstepperRoute =
	AuthenticatedSemesterstepperImport.update({
		id: "/semester_stepper",
		path: "/semester_stepper",
		getParentRoute: () => AuthenticatedRoute,
	} as any);

const AuthenticatedNotesRoute = AuthenticatedNotesImport.update({
	id: "/notes",
	path: "/notes",
	getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedNotebooksRoute = AuthenticatedNotebooksImport.update({
	id: "/notebooks",
	path: "/notebooks",
	getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedFlashcardsRoute = AuthenticatedFlashcardsImport.update({
	id: "/flashcards",
	path: "/flashcards",
	getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedCalendarRoute = AuthenticatedCalendarImport.update({
	id: "/calendar",
	path: "/calendar",
	getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedUniversityIndexRoute =
	AuthenticatedUniversityIndexImport.update({
		id: "/university/",
		path: "/university/",
		getParentRoute: () => AuthenticatedRoute,
	} as any);

const AuthenticatedUniversityModulesRoute =
	AuthenticatedUniversityModulesImport.update({
		id: "/university/modules",
		path: "/university/modules",
		getParentRoute: () => AuthenticatedRoute,
	} as any);

const AuthenticatedUniversityTodosIndexRoute =
	AuthenticatedUniversityTodosIndexImport.update({
		id: "/university/todos/",
		path: "/university/todos/",
		getParentRoute: () => AuthenticatedRoute,
	} as any);

const AuthenticatedUniversitySemesterIndexRoute =
	AuthenticatedUniversitySemesterIndexImport.update({
		id: "/university/semester/",
		path: "/university/semester/",
		getParentRoute: () => AuthenticatedRoute,
	} as any);

const AuthenticatedUniversityCoursesIndexRoute =
	AuthenticatedUniversityCoursesIndexImport.update({
		id: "/university/courses/",
		path: "/university/courses/",
		getParentRoute: () => AuthenticatedRoute,
	} as any);

const AuthenticatedUniversityTodosTodoRoute =
	AuthenticatedUniversityTodosTodoImport.update({
		id: "/university/todos/$todo",
		path: "/university/todos/$todo",
		getParentRoute: () => AuthenticatedRoute,
	} as any);

const AuthenticatedUniversitySemesterSemesterRoute =
	AuthenticatedUniversitySemesterSemesterImport.update({
		id: "/university/semester/$semester",
		path: "/university/semester/$semester",
		getParentRoute: () => AuthenticatedRoute,
	} as any);

const AuthenticatedUniversityCoursesCoursesRoute =
	AuthenticatedUniversityCoursesCoursesImport.update({
		id: "/university/courses/$courses",
		path: "/university/courses/$courses",
		getParentRoute: () => AuthenticatedRoute,
	} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/_authenticated": {
			id: "/_authenticated";
			path: "";
			fullPath: "";
			preLoaderRoute: typeof AuthenticatedImport;
			parentRoute: typeof rootRoute;
		};
		"/login": {
			id: "/login";
			path: "/login";
			fullPath: "/login";
			preLoaderRoute: typeof LoginImport;
			parentRoute: typeof rootRoute;
		};
		"/signup": {
			id: "/signup";
			path: "/signup";
			fullPath: "/signup";
			preLoaderRoute: typeof SignupImport;
			parentRoute: typeof rootRoute;
		};
		"/_authenticated/calendar": {
			id: "/_authenticated/calendar";
			path: "/calendar";
			fullPath: "/calendar";
			preLoaderRoute: typeof AuthenticatedCalendarImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/flashcards": {
			id: "/_authenticated/flashcards";
			path: "/flashcards";
			fullPath: "/flashcards";
			preLoaderRoute: typeof AuthenticatedFlashcardsImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/notebooks": {
			id: "/_authenticated/notebooks";
			path: "/notebooks";
			fullPath: "/notebooks";
			preLoaderRoute: typeof AuthenticatedNotebooksImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/notes": {
			id: "/_authenticated/notes";
			path: "/notes";
			fullPath: "/notes";
			preLoaderRoute: typeof AuthenticatedNotesImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/semester_stepper": {
			id: "/_authenticated/semester_stepper";
			path: "/semester_stepper";
			fullPath: "/semester_stepper";
			preLoaderRoute: typeof AuthenticatedSemesterstepperImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/swappy": {
			id: "/_authenticated/swappy";
			path: "/swappy";
			fullPath: "/swappy";
			preLoaderRoute: typeof AuthenticatedSwappyImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/test": {
			id: "/_authenticated/test";
			path: "/test";
			fullPath: "/test";
			preLoaderRoute: typeof AuthenticatedTestImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/": {
			id: "/_authenticated/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof AuthenticatedIndexImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/university/modules": {
			id: "/_authenticated/university/modules";
			path: "/university/modules";
			fullPath: "/university/modules";
			preLoaderRoute: typeof AuthenticatedUniversityModulesImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/university/": {
			id: "/_authenticated/university/";
			path: "/university";
			fullPath: "/university";
			preLoaderRoute: typeof AuthenticatedUniversityIndexImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/university/courses/$courses": {
			id: "/_authenticated/university/courses/$courses";
			path: "/university/courses/$courses";
			fullPath: "/university/courses/$courses";
			preLoaderRoute: typeof AuthenticatedUniversityCoursesCoursesImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/university/semester/$semester": {
			id: "/_authenticated/university/semester/$semester";
			path: "/university/semester/$semester";
			fullPath: "/university/semester/$semester";
			preLoaderRoute: typeof AuthenticatedUniversitySemesterSemesterImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/university/todos/$todo": {
			id: "/_authenticated/university/todos/$todo";
			path: "/university/todos/$todo";
			fullPath: "/university/todos/$todo";
			preLoaderRoute: typeof AuthenticatedUniversityTodosTodoImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/university/courses/": {
			id: "/_authenticated/university/courses/";
			path: "/university/courses";
			fullPath: "/university/courses";
			preLoaderRoute: typeof AuthenticatedUniversityCoursesIndexImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/university/semester/": {
			id: "/_authenticated/university/semester/";
			path: "/university/semester";
			fullPath: "/university/semester";
			preLoaderRoute: typeof AuthenticatedUniversitySemesterIndexImport;
			parentRoute: typeof AuthenticatedImport;
		};
		"/_authenticated/university/todos/": {
			id: "/_authenticated/university/todos/";
			path: "/university/todos";
			fullPath: "/university/todos";
			preLoaderRoute: typeof AuthenticatedUniversityTodosIndexImport;
			parentRoute: typeof AuthenticatedImport;
		};
	}
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
	AuthenticatedCalendarRoute: typeof AuthenticatedCalendarRoute;
	AuthenticatedFlashcardsRoute: typeof AuthenticatedFlashcardsRoute;
	AuthenticatedNotebooksRoute: typeof AuthenticatedNotebooksRoute;
	AuthenticatedNotesRoute: typeof AuthenticatedNotesRoute;
	AuthenticatedSemesterstepperRoute: typeof AuthenticatedSemesterstepperRoute;
	AuthenticatedSwappyRoute: typeof AuthenticatedSwappyRoute;
	AuthenticatedTestRoute: typeof AuthenticatedTestRoute;
	AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute;
	AuthenticatedUniversityModulesRoute: typeof AuthenticatedUniversityModulesRoute;
	AuthenticatedUniversityIndexRoute: typeof AuthenticatedUniversityIndexRoute;
	AuthenticatedUniversityCoursesCoursesRoute: typeof AuthenticatedUniversityCoursesCoursesRoute;
	AuthenticatedUniversitySemesterSemesterRoute: typeof AuthenticatedUniversitySemesterSemesterRoute;
	AuthenticatedUniversityTodosTodoRoute: typeof AuthenticatedUniversityTodosTodoRoute;
	AuthenticatedUniversityCoursesIndexRoute: typeof AuthenticatedUniversityCoursesIndexRoute;
	AuthenticatedUniversitySemesterIndexRoute: typeof AuthenticatedUniversitySemesterIndexRoute;
	AuthenticatedUniversityTodosIndexRoute: typeof AuthenticatedUniversityTodosIndexRoute;
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
	AuthenticatedCalendarRoute: AuthenticatedCalendarRoute,
	AuthenticatedFlashcardsRoute: AuthenticatedFlashcardsRoute,
	AuthenticatedNotebooksRoute: AuthenticatedNotebooksRoute,
	AuthenticatedNotesRoute: AuthenticatedNotesRoute,
	AuthenticatedSemesterstepperRoute: AuthenticatedSemesterstepperRoute,
	AuthenticatedSwappyRoute: AuthenticatedSwappyRoute,
	AuthenticatedTestRoute: AuthenticatedTestRoute,
	AuthenticatedIndexRoute: AuthenticatedIndexRoute,
	AuthenticatedUniversityModulesRoute: AuthenticatedUniversityModulesRoute,
	AuthenticatedUniversityIndexRoute: AuthenticatedUniversityIndexRoute,
	AuthenticatedUniversityCoursesCoursesRoute:
		AuthenticatedUniversityCoursesCoursesRoute,
	AuthenticatedUniversitySemesterSemesterRoute:
		AuthenticatedUniversitySemesterSemesterRoute,
	AuthenticatedUniversityTodosTodoRoute: AuthenticatedUniversityTodosTodoRoute,
	AuthenticatedUniversityCoursesIndexRoute:
		AuthenticatedUniversityCoursesIndexRoute,
	AuthenticatedUniversitySemesterIndexRoute:
		AuthenticatedUniversitySemesterIndexRoute,
	AuthenticatedUniversityTodosIndexRoute:
		AuthenticatedUniversityTodosIndexRoute,
};

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
	AuthenticatedRouteChildren,
);

export interface FileRoutesByFullPath {
	"": typeof AuthenticatedRouteWithChildren;
	"/login": typeof LoginRoute;
	"/signup": typeof SignupRoute;
	"/calendar": typeof AuthenticatedCalendarRoute;
	"/flashcards": typeof AuthenticatedFlashcardsRoute;
	"/notebooks": typeof AuthenticatedNotebooksRoute;
	"/notes": typeof AuthenticatedNotesRoute;
	"/semester_stepper": typeof AuthenticatedSemesterstepperRoute;
	"/swappy": typeof AuthenticatedSwappyRoute;
	"/test": typeof AuthenticatedTestRoute;
	"/": typeof AuthenticatedIndexRoute;
	"/university/modules": typeof AuthenticatedUniversityModulesRoute;
	"/university": typeof AuthenticatedUniversityIndexRoute;
	"/university/courses/$courses": typeof AuthenticatedUniversityCoursesCoursesRoute;
	"/university/semester/$semester": typeof AuthenticatedUniversitySemesterSemesterRoute;
	"/university/todos/$todo": typeof AuthenticatedUniversityTodosTodoRoute;
	"/university/courses": typeof AuthenticatedUniversityCoursesIndexRoute;
	"/university/semester": typeof AuthenticatedUniversitySemesterIndexRoute;
	"/university/todos": typeof AuthenticatedUniversityTodosIndexRoute;
}

export interface FileRoutesByTo {
	"/login": typeof LoginRoute;
	"/signup": typeof SignupRoute;
	"/calendar": typeof AuthenticatedCalendarRoute;
	"/flashcards": typeof AuthenticatedFlashcardsRoute;
	"/notebooks": typeof AuthenticatedNotebooksRoute;
	"/notes": typeof AuthenticatedNotesRoute;
	"/semester_stepper": typeof AuthenticatedSemesterstepperRoute;
	"/swappy": typeof AuthenticatedSwappyRoute;
	"/test": typeof AuthenticatedTestRoute;
	"/": typeof AuthenticatedIndexRoute;
	"/university/modules": typeof AuthenticatedUniversityModulesRoute;
	"/university": typeof AuthenticatedUniversityIndexRoute;
	"/university/courses/$courses": typeof AuthenticatedUniversityCoursesCoursesRoute;
	"/university/semester/$semester": typeof AuthenticatedUniversitySemesterSemesterRoute;
	"/university/todos/$todo": typeof AuthenticatedUniversityTodosTodoRoute;
	"/university/courses": typeof AuthenticatedUniversityCoursesIndexRoute;
	"/university/semester": typeof AuthenticatedUniversitySemesterIndexRoute;
	"/university/todos": typeof AuthenticatedUniversityTodosIndexRoute;
}

export interface FileRoutesById {
	__root__: typeof rootRoute;
	"/_authenticated": typeof AuthenticatedRouteWithChildren;
	"/login": typeof LoginRoute;
	"/signup": typeof SignupRoute;
	"/_authenticated/calendar": typeof AuthenticatedCalendarRoute;
	"/_authenticated/flashcards": typeof AuthenticatedFlashcardsRoute;
	"/_authenticated/notebooks": typeof AuthenticatedNotebooksRoute;
	"/_authenticated/notes": typeof AuthenticatedNotesRoute;
	"/_authenticated/semester_stepper": typeof AuthenticatedSemesterstepperRoute;
	"/_authenticated/swappy": typeof AuthenticatedSwappyRoute;
	"/_authenticated/test": typeof AuthenticatedTestRoute;
	"/_authenticated/": typeof AuthenticatedIndexRoute;
	"/_authenticated/university/modules": typeof AuthenticatedUniversityModulesRoute;
	"/_authenticated/university/": typeof AuthenticatedUniversityIndexRoute;
	"/_authenticated/university/courses/$courses": typeof AuthenticatedUniversityCoursesCoursesRoute;
	"/_authenticated/university/semester/$semester": typeof AuthenticatedUniversitySemesterSemesterRoute;
	"/_authenticated/university/todos/$todo": typeof AuthenticatedUniversityTodosTodoRoute;
	"/_authenticated/university/courses/": typeof AuthenticatedUniversityCoursesIndexRoute;
	"/_authenticated/university/semester/": typeof AuthenticatedUniversitySemesterIndexRoute;
	"/_authenticated/university/todos/": typeof AuthenticatedUniversityTodosIndexRoute;
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths:
		| ""
		| "/login"
		| "/signup"
		| "/calendar"
		| "/flashcards"
		| "/notebooks"
		| "/notes"
		| "/semester_stepper"
		| "/swappy"
		| "/test"
		| "/"
		| "/university/modules"
		| "/university"
		| "/university/courses/$courses"
		| "/university/semester/$semester"
		| "/university/todos/$todo"
		| "/university/courses"
		| "/university/semester"
		| "/university/todos";
	fileRoutesByTo: FileRoutesByTo;
	to:
		| "/login"
		| "/signup"
		| "/calendar"
		| "/flashcards"
		| "/notebooks"
		| "/notes"
		| "/semester_stepper"
		| "/swappy"
		| "/test"
		| "/"
		| "/university/modules"
		| "/university"
		| "/university/courses/$courses"
		| "/university/semester/$semester"
		| "/university/todos/$todo"
		| "/university/courses"
		| "/university/semester"
		| "/university/todos";
	id:
		| "__root__"
		| "/_authenticated"
		| "/login"
		| "/signup"
		| "/_authenticated/calendar"
		| "/_authenticated/flashcards"
		| "/_authenticated/notebooks"
		| "/_authenticated/notes"
		| "/_authenticated/semester_stepper"
		| "/_authenticated/swappy"
		| "/_authenticated/test"
		| "/_authenticated/"
		| "/_authenticated/university/modules"
		| "/_authenticated/university/"
		| "/_authenticated/university/courses/$courses"
		| "/_authenticated/university/semester/$semester"
		| "/_authenticated/university/todos/$todo"
		| "/_authenticated/university/courses/"
		| "/_authenticated/university/semester/"
		| "/_authenticated/university/todos/";
	fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
	AuthenticatedRoute: typeof AuthenticatedRouteWithChildren;
	LoginRoute: typeof LoginRoute;
	SignupRoute: typeof SignupRoute;
}

const rootRouteChildren: RootRouteChildren = {
	AuthenticatedRoute: AuthenticatedRouteWithChildren,
	LoginRoute: LoginRoute,
	SignupRoute: SignupRoute,
};

export const routeTree = rootRoute
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login",
        "/signup"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/calendar",
        "/_authenticated/flashcards",
        "/_authenticated/notebooks",
        "/_authenticated/notes",
        "/_authenticated/semester_stepper",
        "/_authenticated/swappy",
        "/_authenticated/test",
        "/_authenticated/",
        "/_authenticated/university/modules",
        "/_authenticated/university/",
        "/_authenticated/university/courses/$courses",
        "/_authenticated/university/semester/$semester",
        "/_authenticated/university/todos/$todo",
        "/_authenticated/university/courses/",
        "/_authenticated/university/semester/",
        "/_authenticated/university/todos/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_authenticated/calendar": {
      "filePath": "_authenticated/calendar.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/flashcards": {
      "filePath": "_authenticated/flashcards.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/notebooks": {
      "filePath": "_authenticated/notebooks.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/notes": {
      "filePath": "_authenticated/notes.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/semester_stepper": {
      "filePath": "_authenticated/semester_stepper.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/swappy": {
      "filePath": "_authenticated/swappy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/test": {
      "filePath": "_authenticated/test.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/university/modules": {
      "filePath": "_authenticated/university/modules.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/university/": {
      "filePath": "_authenticated/university/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/university/courses/$courses": {
      "filePath": "_authenticated/university/courses/$courses.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/university/semester/$semester": {
      "filePath": "_authenticated/university/semester/$semester.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/university/todos/$todo": {
      "filePath": "_authenticated/university/todos/$todo.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/university/courses/": {
      "filePath": "_authenticated/university/courses/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/university/semester/": {
      "filePath": "_authenticated/university/semester/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/university/todos/": {
      "filePath": "_authenticated/university/todos/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
