/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedTodosImport } from './routes/_authenticated/todos'
import { Route as AuthenticatedTestImport } from './routes/_authenticated/test'
import { Route as AuthenticatedNotesImport } from './routes/_authenticated/notes'
import { Route as AuthenticatedNotebooksImport } from './routes/_authenticated/notebooks'
import { Route as AuthenticatedFlashcardsImport } from './routes/_authenticated/flashcards'
import { Route as AuthenticatedCoursesImport } from './routes/_authenticated/courses'
import { Route as AuthenticatedSemesterIndexImport } from './routes/_authenticated/semester/index'
import { Route as AuthenticatedSemesterSemesterImport } from './routes/_authenticated/semester/$semester'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTodosRoute = AuthenticatedTodosImport.update({
  path: '/todos',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTestRoute = AuthenticatedTestImport.update({
  path: '/test',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedNotesRoute = AuthenticatedNotesImport.update({
  path: '/notes',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedNotebooksRoute = AuthenticatedNotebooksImport.update({
  path: '/notebooks',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedFlashcardsRoute = AuthenticatedFlashcardsImport.update({
  path: '/flashcards',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedCoursesRoute = AuthenticatedCoursesImport.update({
  path: '/courses',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSemesterIndexRoute = AuthenticatedSemesterIndexImport.update(
  {
    path: '/semester/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedSemesterSemesterRoute =
  AuthenticatedSemesterSemesterImport.update({
    path: '/semester/$semester',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/courses': {
      id: '/_authenticated/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof AuthenticatedCoursesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/flashcards': {
      id: '/_authenticated/flashcards'
      path: '/flashcards'
      fullPath: '/flashcards'
      preLoaderRoute: typeof AuthenticatedFlashcardsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/notebooks': {
      id: '/_authenticated/notebooks'
      path: '/notebooks'
      fullPath: '/notebooks'
      preLoaderRoute: typeof AuthenticatedNotebooksImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/notes': {
      id: '/_authenticated/notes'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof AuthenticatedNotesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/test': {
      id: '/_authenticated/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof AuthenticatedTestImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/todos': {
      id: '/_authenticated/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof AuthenticatedTodosImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/semester/$semester': {
      id: '/_authenticated/semester/$semester'
      path: '/semester/$semester'
      fullPath: '/semester/$semester'
      preLoaderRoute: typeof AuthenticatedSemesterSemesterImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/semester/': {
      id: '/_authenticated/semester/'
      path: '/semester'
      fullPath: '/semester'
      preLoaderRoute: typeof AuthenticatedSemesterIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedCoursesRoute,
    AuthenticatedFlashcardsRoute,
    AuthenticatedNotebooksRoute,
    AuthenticatedNotesRoute,
    AuthenticatedTestRoute,
    AuthenticatedTodosRoute,
    AuthenticatedIndexRoute,
    AuthenticatedSemesterSemesterRoute,
    AuthenticatedSemesterIndexRoute,
  }),
  LoginRoute,
  SignupRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login",
        "/signup"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/courses",
        "/_authenticated/flashcards",
        "/_authenticated/notebooks",
        "/_authenticated/notes",
        "/_authenticated/test",
        "/_authenticated/todos",
        "/_authenticated/",
        "/_authenticated/semester/$semester",
        "/_authenticated/semester/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_authenticated/courses": {
      "filePath": "_authenticated/courses.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/flashcards": {
      "filePath": "_authenticated/flashcards.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/notebooks": {
      "filePath": "_authenticated/notebooks.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/notes": {
      "filePath": "_authenticated/notes.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/test": {
      "filePath": "_authenticated/test.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/todos": {
      "filePath": "_authenticated/todos.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/semester/$semester": {
      "filePath": "_authenticated/semester/$semester.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/semester/": {
      "filePath": "_authenticated/semester/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
